---

- hosts: server_emulator
  become: true

  tasks:
    - command: "date +%Y%m%d%T"
      register: start_time

    - set_fact:
        hash_name: "port_provision_40g_cr_fec_none_autoeng_on_lanes_4_count_1_{{ start_time.stdout }}"
        start_time: "{{ start_time.stdout }}"


- hosts: leaf[0]:spine[0]
  become: true
  tasks:
    - file:
        path: "{{ port_provision_log_dir }}"
        state: directory

    - name: Take backup of /etc/goes/start file
      copy:
        src: "{{ goes_start_file }}"
        dest: "{{ goes_start_file_bck }}"
        remote_src: true

    - name: Copy updated start file for this testcase
      copy:
        src: ../../templates/40g_cr_fec_none_autoeng_on_lanes_4_count_1_start_file
        dest: /etc/goes/start

    - name: Copy portprovision file for this testcase
      copy:
        src: ../../templates/40g_cr_lanes_4_count_1_portprovision
        dest: /etc/goes/portprovision

    - name: Restart goes
      command: "goes restart"

    - name: Verify media, speed and fec values
      test_port_links:
        switch_name: "{{ inventory_hostname }}"
        eth_list: "1,3,5,7,9,11,13,15"
        speed: "auto"
        media: "copper"
        fec: "none"
        hash_name: "{{ hostvars['server_emulator']['hash_name'] }}"
        log_dir_path: "{{ port_provision_log_dir }}"
      register: module_out

    - command: "date +%Y%m%d%T"
      register: end_time

    - name: Fetch the log file
      slurp:
        src: "{{ module_out.log_file_path }}"
      register: logs

    - name: Store the test result in a hash in redis db on server emulator
      store_result_in_redis:
        hash_name: "{{ hostvars['server_emulator']['hash_name'] }}"
        start_time: "{{ hostvars['server_emulator']['start_time'] }}"
        end_time: "{{ end_time.stdout }}"
        hash_dict: "{{ module_out.hash_dict }}"
        log_content: "{{ logs['content'] | b64decode }}"
      delegate_to: 127.0.0.1

    - name: Copy iperf parallel server shell script
      copy:
        src: ../../files/iperf-parallel-servers
        dest: ~/iperf-parallel-servers.sh
        mode: 0755

    - name: Start iperf server instances
      shell: "~/iperf-parallel-servers.sh 8 server-report"

    - name: Initiate iperf client and verify traffic
      verify_iperf_traffic:
        switch_name: "{{ inventory_hostname }}"
        leaf_server: "{{ groups['leaf'][0] }}"
        leaf_eth1_ip: "10.0.1.29"
        spine_eth1_ip: "10.0.1.31"
        eth_list: "1,3,5,7,9,11,13,15"
        hash_name: "{{ hostvars['server_emulator']['hash_name'] }}"
        log_dir_path: "{{ port_provision_log_dir }}"
      register: module_out

    - command: "date +%Y%m%d%T"
      register: end_time

    - name: Fetch the log file
      slurp:
        src: "{{ module_out.log_file_path }}"
      register: logs

    - name: Store the test result in a hash in redis db on server emulator
      store_result_in_redis:
        hash_name: "{{ hostvars['server_emulator']['hash_name'] }}"
        start_time: "{{ hostvars['server_emulator']['start_time'] }}"
        end_time: "{{ end_time.stdout }}"
        hash_dict: "{{ module_out.hash_dict }}"
        log_content: "{{ logs['content'] | b64decode }}"
      delegate_to: 127.0.0.1

    - include: ../../playbooks/get_goes_version_and_tags.yml


- include: port_provision_reset.yml
  when: reset_config


- hosts: server_emulator
  become: true
  tasks:
    - name: Get the test result from redis db
      get_test_result_from_redis:
        hash_name: "{{ hostvars['server_emulator']['hash_name'] }}"
      register: result

    - name: Print test case result
      debug:
        msg: "Test case result: {{ result.result_status }}"

    - name: Print failure summary
      debug:
        msg: "Failure summary: {{ result.result_detail }}"


- hosts: leaf:spine
  become: true
  tasks:
    - include: ../../playbooks/get_goes_status.yml
