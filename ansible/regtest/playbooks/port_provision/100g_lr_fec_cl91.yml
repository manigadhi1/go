---

- hosts: leaf:spine
  become: true
  ignore_errors: yes
  tasks:
    - shell: dpkg --list | grep kernel
      register: kernel_version

    - debug:
        var: kernel_version.stdout_lines


- hosts: server_emulator
  become: true

  tasks:
    - command: "date +%Y%m%d%T"
      register: start_time

    - set_fact:
        hash_name: "port_provision_100g_lr_fec_cl91_{{ start_time.stdout }}"
        start_time: "{{ start_time.stdout }}"


- hosts: leaf[1]
  become: true
  tasks:
    - file:
        path: "{{ port_provision_log_dir }}"
        state: directory

    - name: Take backup of /etc/goes/start file
      copy:
        src: "{{ goes_start_file }}"
        dest: "{{ goes_start_file_bck }}"
        remote_src: true

    - name: Copy updated start file for this testcase
      template:
        src: ../../templates/100g_lr_fec_cl91_start_file
        dest: /etc/goes/start

    - name: Restart goes
      command: "goes restart"

    - name: Verify 100g lr fec cl91
      test_single_port_provision:
        switch_name: "{{ inventory_hostname }}"
        eth: "32"
        speed: "100g"
        media: "LR4"
        fec: "cl91"
        verify_links: False
        platina_redis_channel: "{{ platina_redis_channel }}"
        hash_name: "{{ hostvars['server_emulator']['hash_name'] }}"
        log_dir_path: "{{ port_provision_log_dir }}"
      register: module_out

    - command: "date +%Y%m%d%T"
      register: end_time

    - name: Fetch the log file
      slurp:
        src: "{{ module_out.log_file_path }}"
      register: logs

    - name: Store the test result in a hash in redis db on server emulator
      store_result_in_redis:
        hash_name: "{{ hostvars['server_emulator']['hash_name'] }}"
        start_time: "{{ hostvars['server_emulator']['start_time'] }}"
        end_time: "{{ end_time.stdout }}"
        hash_dict: "{{ module_out.hash_dict }}"
        log_content: "{{ logs['content'] | b64decode }}"
      delegate_to: 127.0.0.1


- hosts: packet_generator
  become: true
  tasks:
    - name: Copy cint config create and delete files
      template:
        src: ../../templates/{{ item }}
        dest: /home/platina/bin/{{ item }}
      with_items:
      - '100g_lr_fec_cl91_create.cint'
      - '100g_lr_fec_cl91_delete.cint'

    - name: Execute port provision on packet generator and verify the same
      test_single_port_provision_packet_generator:
        switch_name: "{{ inventory_hostname }}"
        ce: "31"
        speed: "100g"
        media: "LR4"
        create_cint_file: "100g_lr_fec_cl91_create.cint"
        hash_name: "{{ hostvars['server_emulator']['hash_name'] }}"
      register: module_out

    - command: "date +%Y%m%d%T"
      register: end_time

    - name: Store the test result in a hash in redis db on server emulator
      store_result_in_redis:
        hash_name: "{{ hostvars['server_emulator']['hash_name'] }}"
        start_time: "{{ hostvars['server_emulator']['start_time'] }}"
        end_time: "{{ end_time.stdout }}"
        hash_dict: "{{ module_out.hash_dict }}"
        log_content: ""
      delegate_to: 127.0.0.1


- hosts: leaf[1]
  become: true
  tasks:
    - name: Verify if port links are up for eth interfaces
      test_single_port_provision:
        switch_name: "{{ inventory_hostname }}"
        eth: "32"
        verify_links: True
        platina_redis_channel: "{{ platina_redis_channel }}"
        hash_name: "{{ hostvars['server_emulator']['hash_name'] }}"
        log_dir_path: "{{ port_provision_log_dir }}"
      register: module_out

    - command: "date +%Y%m%d%T"
      register: end_time

    - name: Fetch the log file
      slurp:
        src: "{{ module_out.log_file_path }}"
      register: logs

    - name: Store the test result in a hash in redis db on server emulator
      store_result_in_redis:
        hash_name: "{{ hostvars['server_emulator']['hash_name'] }}"
        start_time: "{{ hostvars['server_emulator']['start_time'] }}"
        end_time: "{{ end_time.stdout }}"
        hash_dict: "{{ module_out.hash_dict }}"
        log_content: "{{ logs['content'] | b64decode }}"
      delegate_to: 127.0.0.1

    - include: ../../playbooks/get_goes_version_and_tags.yml


- hosts: packet_generator
  become: true
  tasks:
    - name: Reset the configuration done
      test_single_port_provision_packet_generator:
        switch_name: "{{ inventory_hostname }}"
        ce: "31"
        speed: "100g"
        delete_cint_file: "100g_lr_fec_cl91_delete.cint"
        reset_config: True
        hash_name: "{{ hostvars['server_emulator']['hash_name'] }}"
      register: module_out

    - command: "date +%Y%m%d%T"
      register: end_time

    - name: Store the test result in a hash in redis db on server emulator
      store_result_in_redis:
        hash_name: "{{ hostvars['server_emulator']['hash_name'] }}"
        start_time: "{{ hostvars['server_emulator']['start_time'] }}"
        end_time: "{{ end_time.stdout }}"
        hash_dict: "{{ module_out.hash_dict }}"
        log_content: ""
      delegate_to: 127.0.0.1

    - file:
        path: "/home/platina/bin/{{ item }}"
        state: absent
      with_items:
      - '100g_lr_fec_cl91_create.cint'
      - '100g_lr_fec_cl91_delete.cint'


- hosts: leaf[1]
  become: true
  tasks:
    - name: Restore backup of /etc/goes/start
      copy:
        src: "{{ goes_start_file_bck }}"
        dest: "{{ goes_start_file }}"
        remote_src: true

    - name: Remove backup file
      file:
        path: "{{ goes_start_file_bck }}"
        state: absent

    - command: "goes restart"


- hosts: server_emulator
  become: true
  tasks:
    - name: Get the test result from redis db
      get_test_result_from_redis:
        hash_name: "{{ hostvars['server_emulator']['hash_name'] }}"
      register: result

    - name: Print test case result
      debug:
        msg: "Test case result: {{ result.result_status }}"

    - name: Print failure summary
      debug:
        msg: "Failure summary: {{ result.result_detail }}"

    - lineinfile:
        path: "{{ regression_summary_report }}"
        line: "{{ hash_name }}: {{ result.result_status }}"


- hosts: leaf:spine
  become: true
  tasks:
    - include: ../../playbooks/get_goes_status.yml
